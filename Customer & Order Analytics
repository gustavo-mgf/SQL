#In this SQL, I am querying a database with multiple tables in it to quantify statistics about customer and order data.

-- 1. How many orders were placed in January? --

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID)=6
AND orderID <> 'Order ID'
;
	
-- 2. How many of those orders were for an iPhone? --

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE Product="iPhone"
AND length(orderID)=6
AND orderID <> 'Order ID'
;

-- 3. Select the customer account numbers for all the orders that were placed in February. --

SELECT acctnum
FROM BIT_DB.customers customer
LEFT OUTER JOIN BIT_DB.FebSales feb
ON customer.order_id=feb.orderID
WHERE length(orderID)=6
AND orderID <> 'Order ID'
;

-- 4. Which product was the cheapest one sold in January, and what was the price? --

SELECT Product, MIN(price)
FROM BIT_DB.FebSales
GROUP BY Product, price
ORDER BY price ASC 
LIMIT 1
;

-- 5. What is the total revenue for each product sold in January? --

-- I cleaned up the data by removing the empty row and 'Product' row on the JanSales table --

SELECT Product, 
SUM(Quantity)*price AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product
HAVING Revenue>0
;

-- 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue? --

SELECT Product,
SUM(Quantity),
SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
;

-- 7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? --

SELECT COUNT(distinct cust.acctnum),
AVG(Quantity*price)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID=cust.order_id
WHERE feb.Quantity>2
AND length(orderID)=6
AND orderID <> 'Order ID'
;

-- 8. List all the products sold in Los Angeles in February, and include how many of each were sold. -- 

SELECT Product,
SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%los angeles%'
GROUP BY Product
;
